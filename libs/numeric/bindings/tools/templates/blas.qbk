$TEMPLATE[blas.qbk]
[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section $groupname]

[heading Prototype]
There $PROTOTYPE_OVERLOADS `$groupname` available, please see below.
$PROTOTYPES

[heading Description]

`$groupname` (short for $FRIENDLY_NAME) provides a C++
interface to BLAS routines $SUBROUTINES. 
$PURPOSE

The selection of the BLAS routine is done during compile-time, 
and is determined by the type of values contained in type `$FIRST_TYPENAME`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<$FIRST_TYPENAME>::type`.
Table X below illustrates to which specific routine this dispatching will take place. 

[table Dispatching of $groupname.
$DISPATCH_TABLE
]

The original routines $SUBROUTINES have $NO_ARGUMENTS_LEVEL0 arguments,
whereas `$groupname` requires $NO_ARGUMENTS_LEVEL2 arguments.

[table Deduction of arguments of $groupname.
]

[heading Definition]
Defined in header [headerref $header].

[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]

[heading Complexity]

[heading Example]
``
#include <$header>
using namespace boost::numeric::bindings;

blas::$groupname( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``

[heading Notes]

[heading See Also]

* Originating Fortran source files $ORIGINATING_SOURCES at Netlib.

[endsect]
$TEMPLATE[blas_prototype.qbk]
``
$groupname( $LEVEL2 );
``
$TEMPLATE[end]
