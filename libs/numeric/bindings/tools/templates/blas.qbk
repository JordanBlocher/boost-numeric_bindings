$TEMPLATE[blas.qbk]

[section x$GROUPNAME]

[section Prototype]
There $PROTOTYPE_OVERLOADS `$groupname` available, please see below.
$PROTOTYPES

[endsect]

[section Description]

`$groupname` (short for $FRIENDLY_NAME) provides a C++
interface to BLAS routines $SUBROUTINES. 
$PURPOSE

The selection of the BLAS routine is done during compile-time, 
and is determined by the type of values contained in type `$FIRST_TYPENAME`.
The type of values is obtained through the tensor-traits 
type-definition `typename tensor_traits<$FIRST_TYPENAME>::value_type`.
Table xx illustrates to which specific routinev this dispatching will take place. 

[table Dispatching of $groupname.
$DISPATCH_TABLE
]

[endsect]

[section Definition]
Defined in header [headerref $header].
[endsect]

[section Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]

The tensor_traits<>::value_type of A, B, and C should be the same.
Tensor C should be mutable.

[endsect]

[section Complexity]
[endsect]

[section Example]
``
#include <$header>
using namespace boost::numeric::bindings;

blas::$groupname( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``

[endsect]

[section Notes]
[endsect]

[section See Also]

* Originating Fortran source files $ORIGINATING_SOURCES at Netlib.

[endsect]

[endsect]
$TEMPLATE[blas_prototype.qbk]
``
$groupname( $LEVEL2 );
``
$TEMPLATE[end]
