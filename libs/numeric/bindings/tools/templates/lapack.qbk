$TEMPLATE[lapack.qbk]
[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section $groupname]

[heading Prototype]
There $PROTOTYPE_OVERLOADS `$groupname` available, please see below.
$PROTOTYPES

[heading Description]

`$groupname` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines $SUBROUTINES. 
$PURPOSE

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `$FIRST_TYPENAME`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<$FIRST_TYPENAME>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of $groupname
$DISPATCH_TABLE
]


[heading Definition]
Defined in header [headerref $header].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <$header>
using namespace boost::numeric::bindings;

lapack::$groupname( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files $ORIGINATING_SOURCES at Netlib.

[endsect]
$TEMPLATE[lapack_doc_include_hierarchy]
[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section $CAPITALIZED_LEVEL Routines]

$CONTENT

[endsect]
$TEMPLATE[lapack_prototype.qbk]
``
$groupname( $LEVEL2 );
``
$TEMPLATE[end]
