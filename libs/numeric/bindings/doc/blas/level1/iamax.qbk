[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section iamax]

[heading Prototype]
There is one prototype of `iamax` available, please see below.
``
iamax( const VectorX& x );
``


[heading Description]

`iamax` (short for TODO) provides a C++
interface to BLAS routines ISAMAX, IDAMAX, ICAMAX, and IZAMAX. 


The selection of the BLAS routine is done during compile-time, 
and is determined by the type of values contained in type `VectorX`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<VectorX>::type`.
Table X below illustrates to which specific routine this dispatching will take place. 

[table Dispatching of iamax.
[  [ Value type of VectorX ] [BLAS routine] [CBLAS routine] [CUBLAS routine] ]
[  [`float`][ISAMAX][cblas_isamax][cublasIsamax] ]
[  [`double`][IDAMAX][cblas_idamax][cublasIdamax] ]
[  [`complex<float>`][ICAMAX][cblas_icamax][cublasIcamax] ]
[  [`complex<double>`][IZAMAX][cblas_izamax][cublasIzamax] ]

]

The original routines ISAMAX, IDAMAX, ICAMAX, and IZAMAX have three arguments,
whereas `iamax` requires one arguments.

[table Deduction of arguments of iamax.
]

[heading Definition]
Defined in header [headerref boost/numeric/bindings/blas/level1/iamax.hpp].

[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]

[heading Complexity]

[heading Example]
``
#include <boost/numeric/bindings/blas/level1/iamax.hpp>
using namespace boost::numeric::bindings;

blas::iamax( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``

[heading Notes]

[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/blas/isamax.f isamax.f], [@http://www.netlib.org/blas/idamax.f idamax.f], [@http://www.netlib.org/blas/icamax.f icamax.f], and [@http://www.netlib.org/blas/izamax.f izamax.f] at Netlib.

[endsect]
