[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section rot]

[heading Prototype]
There is one prototype of `rot` available, please see below.
``
rot( VectorX& x, VectorY& y, const Scalar >, const Scalar > );
``


[heading Description]

`rot` (short for TODO) provides a C++
interface to BLAS routines SROT, DROT, CSROT, and ZDROT. 
Applies a plane rotation, where the cos and sin (c and s) are real
and the vectors cx and cy are complex.
jack dongarra, linpack, 3/11/78.

The selection of the BLAS routine is done during compile-time, 
and is determined by the type of values contained in type `VectorX`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<VectorX>::type`.
Table X below illustrates to which specific routine this dispatching will take place. 

[table Dispatching of rot.
[  [ Value type of VectorX ] [BLAS routine] [CBLAS routine] [CUBLAS routine] ]
[  [`float`][SROT][cblas_srot][cublasSrot] ]
[  [`double`][DROT][cblas_drot][cublasDrot] ]
[  [`complex<float>`][CSROT][Unavailable][cublasCsrot] ]
[  [`complex<double>`][ZDROT][Unavailable][cublasZdrot] ]

]

The original routines SROT, DROT, CSROT, and ZDROT have seven arguments,
whereas `rot` requires four arguments.

[table Deduction of arguments of rot.
]

[heading Definition]
Defined in header [headerref boost/numeric/bindings/blas/level1/rot.hpp].

[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]

[heading Complexity]

[heading Example]
``
#include <boost/numeric/bindings/blas/level1/rot.hpp>
using namespace boost::numeric::bindings;

blas::rot( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``

[heading Notes]

[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/blas/srot.f srot.f], [@http://www.netlib.org/blas/drot.f drot.f], [@http://www.netlib.org/blas/csrot.f csrot.f], and [@http://www.netlib.org/blas/zdrot.f zdrot.f] at Netlib.

[endsect]
