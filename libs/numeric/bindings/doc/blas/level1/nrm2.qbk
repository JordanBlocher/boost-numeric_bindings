[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section nrm2]

[heading Prototype]
There is one prototype of `nrm2` available, please see below.
``
nrm2( const VectorX& x );
``


[heading Description]

`nrm2` (short for TODO) provides a C++
interface to BLAS routines SNRM2, DNRM2, SCNRM2, and DZNRM2. 


The selection of the BLAS routine is done during compile-time, 
and is determined by the type of values contained in type `VectorX`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<VectorX>::type`.
Table X below illustrates to which specific routine this dispatching will take place. 

[table Dispatching of nrm2.
[  [ Value type of VectorX ] [BLAS routine] [CBLAS routine] [CUBLAS routine] ]
[  [`float`][SNRM2][cblas_snrm2][cublasSnrm2] ]
[  [`double`][DNRM2][cblas_dnrm2][cublasDnrm2] ]
[  [`complex<float>`][SCNRM2][cblas_scnrm2][cublasScnrm2] ]
[  [`complex<double>`][DZNRM2][cblas_dznrm2][cublasDznrm2] ]

]

The original routines SNRM2, DNRM2, SCNRM2, and DZNRM2 have three arguments,
whereas `nrm2` requires one arguments.

[table Deduction of arguments of nrm2.
]

[heading Definition]
Defined in header [headerref boost/numeric/bindings/blas/level1/nrm2.hpp].

[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]

[heading Complexity]

[heading Example]
``
#include <boost/numeric/bindings/blas/level1/nrm2.hpp>
using namespace boost::numeric::bindings;

blas::nrm2( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``

[heading Notes]

[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/blas/snrm2.f snrm2.f], [@http://www.netlib.org/blas/dnrm2.f dnrm2.f], [@http://www.netlib.org/blas/scnrm2.f scnrm2.f], and [@http://www.netlib.org/blas/dznrm2.f dznrm2.f] at Netlib.

[endsect]
