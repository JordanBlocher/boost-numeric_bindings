
[section her]

[heading Prototype]
There is one prototype of `her` available, please see below.
``
her( const Scalar >, const VectorX& x, MatrixA& a );
``


[heading Description]

`her` (short for hermitian rank-1 update) provides a C++
interface to BLAS routines CHER and ZHER. 
`her` performs the hermitian rank 1 operation

A := alpha*x*conjg( x' ) + A,

where alpha is a real scalar, x is an n element vector and A is an
n by n hermitian matrix.

The selection of the BLAS routine is done during compile-time, 
and is determined by the type of values contained in type `VectorX`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<VectorX>::type`.
Table X below illustrates to which specific routine this dispatching will take place. 

[table Dispatching of her.
[  [ Value type of VectorX ] [BLAS routine] [CBLAS routine] [CUBLAS routine] ]
[  [`complex<float>`][CHER][cblas_cher][cublasCher] ]
[  [`complex<double>`][ZHER][cblas_zher][Unavailable] ]

]

The original routines CHER and ZHER have seven arguments,
whereas `her` requires three arguments.

[table Deduction of arguments of her.
]

[heading Definition]
Defined in header [headerref boost/numeric/bindings/blas/her.hpp].

[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]

[heading Complexity]

[heading Example]
``
#include <boost/numeric/bindings/blas/her.hpp>
using namespace boost::numeric::bindings;

blas::her( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``

[heading Notes]

[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/blas/cher.f cher.f] and [@http://www.netlib.org/blas/zher.f zher.f] at Netlib.

[endsect]
