[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section stegr]

[heading Prototype]
There is one prototype of `stegr` available, please see below.
``
stegr( const char jobz, const char range, const int_t n,
        VectorD& d, VectorE& e, const Scalar >, const Scalar >,
        const int_t il, const int_t iu,
        const Scalar >, int_t& m, VectorW& w, MatrixZ& z,
        VectorISUPPZ& isuppz );
``


[heading Description]

`stegr` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SSTEGR, DSTEGR, CSTEGR, and ZSTEGR. 
`stegr` computes selected eigenvalues and, optionally, eigenvectors
of a real symmetric tridiagonal matrix T. Any such unreduced matrix has
a well defined set of pairwise different real eigenvalues, the corresponding
real eigenvectors are pairwise orthogonal.

The spectrum may be computed either completely or partially by specifying
either an interval (VL,VU] or a range of indices IL:IU for the desired
eigenvalues.

`stegr` is a compatability wrapper around the improved ZSTEMR routine.
See DSTEMR for further details.

One important change is that the ABSTOL parameter no longer provides any
benefit and hence is no longer used.

Note : `stegr` and ZSTEMR work only on machines which follow
IEEE-754 floating-point standard in their handling of infinities and
NaNs. Normal execution may create these exceptiona values and hence
may abort due to a floating point exception in environments which
do not conform to the IEEE-754 standard.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `VectorD`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<VectorD>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of stegr
[  [ Value type of VectorD ] [LAPACK routine] ]
[  [`float`][SSTEGR] ]
[  [`double`][DSTEGR] ]
[  [`complex<float>`][CSTEGR] ]
[  [`complex<double>`][ZSTEGR] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/computational/stegr.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/computational/stegr.hpp>
using namespace boost::numeric::bindings;

lapack::stegr( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/sstegr.f sstegr.f], [@http://www.netlib.org/lapack/double/dstegr.f dstegr.f], [@http://www.netlib.org/lapack/complex/cstegr.f cstegr.f], and [@http://www.netlib.org/lapack/complex16/zstegr.f zstegr.f] at Netlib.

[endsect]
