[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section ptrfs]

[heading Prototype]
There are two prototypes of `ptrfs` available, please see below.
``
ptrfs( const VectorD& d, const VectorE& e, const VectorDF& df,
        const VectorEF& ef, const MatrixB& b, MatrixX& x, VectorFERR& ferr,
        VectorBERR& berr );
``

``
ptrfs( const char uplo, const VectorD& d, const VectorE& e,
        const VectorDF& df, const VectorEF& ef, const MatrixB& b, MatrixX& x,
        VectorFERR& ferr, VectorBERR& berr );
``


[heading Description]

`ptrfs` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SPTRFS, DPTRFS, CPTRFS, and ZPTRFS. 
`ptrfs` improves the computed solution to a system of linear
equations when the coefficient matrix is Hermitian positive definite
and tridiagonal, and provides error bounds and backward error
estimates for the solution.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `VectorD`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<VectorD>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of ptrfs
[  [ Value type of VectorD ] [LAPACK routine] ]
[  [`float`][SPTRFS] ]
[  [`double`][DPTRFS] ]
[  [`complex<float>`][CPTRFS] ]
[  [`complex<double>`][ZPTRFS] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/computational/ptrfs.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/computational/ptrfs.hpp>
using namespace boost::numeric::bindings;

lapack::ptrfs( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/sptrfs.f sptrfs.f], [@http://www.netlib.org/lapack/double/dptrfs.f dptrfs.f], [@http://www.netlib.org/lapack/complex/cptrfs.f cptrfs.f], and [@http://www.netlib.org/lapack/complex16/zptrfs.f zptrfs.f] at Netlib.

[endsect]
