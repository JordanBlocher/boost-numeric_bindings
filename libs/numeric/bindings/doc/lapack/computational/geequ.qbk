[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section geequ]

[heading Prototype]
There is one prototype of `geequ` available, please see below.
``
geequ( const MatrixA& a, VectorR& r, VectorC& c, Scalar >, Scalar >,
        Scalar > );
``


[heading Description]

`geequ` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SGEEQU, DGEEQU, CGEEQU, and ZGEEQU. 
`geequ` computes row and column scalings intended to equilibrate an
M-by-N matrix A and reduce its condition number. R returns the row
scale factors and C the column scale factors, chosen to try to make
the largest element in each row and column of the matrix B with
elements B(i,j)=R(i)*A(i,j)*C(j) have absolute value 1.

R(i) and C(j) are restricted to be between SMLNUM = smallest safe
number and BIGNUM = largest safe number. Use of these scaling
factors is not guaranteed to reduce the condition number of A but
works well in practice.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `MatrixA`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<MatrixA>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of geequ
[  [ Value type of MatrixA ] [LAPACK routine] ]
[  [`float`][SGEEQU] ]
[  [`double`][DGEEQU] ]
[  [`complex<float>`][CGEEQU] ]
[  [`complex<double>`][ZGEEQU] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/computational/geequ.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/computational/geequ.hpp>
using namespace boost::numeric::bindings;

lapack::geequ( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/sgeequ.f sgeequ.f], [@http://www.netlib.org/lapack/double/dgeequ.f dgeequ.f], [@http://www.netlib.org/lapack/complex/cgeequ.f cgeequ.f], and [@http://www.netlib.org/lapack/complex16/zgeequ.f zgeequ.f] at Netlib.

[endsect]
