[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section gbtrs]

[heading Prototype]
There is one prototype of `gbtrs` available, please see below.
``
gbtrs( const MatrixAB& ab, const VectorIPIV& ipiv, MatrixB& b );
``


[heading Description]

`gbtrs` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SGBTRS, DGBTRS, CGBTRS, and ZGBTRS. 
`gbtrs` solves a system of linear equations
A * X = B, A**T * X = B, or A**H * X = B
with a general band matrix A using the LU factorization computed
by ZGBTRF.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `MatrixAB`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<MatrixAB>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of gbtrs
[  [ Value type of MatrixAB ] [LAPACK routine] ]
[  [`float`][SGBTRS] ]
[  [`double`][DGBTRS] ]
[  [`complex<float>`][CGBTRS] ]
[  [`complex<double>`][ZGBTRS] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/computational/gbtrs.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/computational/gbtrs.hpp>
using namespace boost::numeric::bindings;

lapack::gbtrs( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/sgbtrs.f sgbtrs.f], [@http://www.netlib.org/lapack/double/dgbtrs.f dgbtrs.f], [@http://www.netlib.org/lapack/complex/cgbtrs.f cgbtrs.f], and [@http://www.netlib.org/lapack/complex16/zgbtrs.f zgbtrs.f] at Netlib.

[endsect]
