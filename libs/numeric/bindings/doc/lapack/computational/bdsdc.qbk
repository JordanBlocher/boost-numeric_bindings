[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section bdsdc]

[heading Prototype]
There is one prototype of `bdsdc` available, please see below.
``
bdsdc( const char uplo, const char compq, const int_t n,
        VectorD& d, VectorE& e, MatrixU& u, MatrixVT& vt, VectorQ& q,
        VectorIQ& iq );
``


[heading Description]

`bdsdc` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SBDSDC and DBDSDC. 
`bdsdc` computes the singular value decomposition (SVD) of a real
N-by-N (upper or lower) bidiagonal matrix B: B = U * S * VT,
using a divide and conquer method, where S is a diagonal matrix
with non-negative diagonal elements (the singular values of B), and
U and VT are orthogonal matrices of left and right singular vectors,
respectively. `bdsdc` can be used to compute all singular values,
and optionally, singular vectors or singular vectors in compact form.

This code makes very mild assumptions about floating point
arithmetic. It will work on machines with a guard digit in
add/subtract, or on those binary machines without guard digits
which subtract like the Cray X-MP, Cray Y-MP, Cray C-90, or Cray-2.
It could conceivably fail on hexadecimal or decimal machines
without guard digits, but we know of none. See DLASD3 for details.

The code currently calls DLASDQ if singular values only are desired.
However, it can be slightly modified to compute singular values
using the divide and conquer method.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `VectorD`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<VectorD>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of bdsdc
[  [ Value type of VectorD ] [LAPACK routine] ]
[  [`float`][SBDSDC] ]
[  [`double`][DBDSDC] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/computational/bdsdc.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/computational/bdsdc.hpp>
using namespace boost::numeric::bindings;

lapack::bdsdc( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/sbdsdc.f sbdsdc.f] and [@http://www.netlib.org/lapack/double/dbdsdc.f dbdsdc.f] at Netlib.

[endsect]
