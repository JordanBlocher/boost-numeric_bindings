[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section unglq]

[heading Prototype]
There is one prototype of `unglq` available, please see below.
``
unglq( MatrixA& a, const VectorTAU& tau );
``


[heading Description]

`unglq` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SORGLQ, DORGLQ, CUNGLQ, and ZUNGLQ. 
`unglq` generates an M-by-N complex matrix Q with orthonormal rows,
which is defined as the first M rows of a product of K elementary
reflectors of order N

Q = H(k)' . . . H(2)' H(1)'

as returned by ZGELQF.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `MatrixA`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<MatrixA>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of unglq
[  [ Value type of MatrixA ] [LAPACK routine] ]
[  [`float`][SORGLQ] ]
[  [`double`][DORGLQ] ]
[  [`complex<float>`][CUNGLQ] ]
[  [`complex<double>`][ZUNGLQ] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/computational/unglq.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/computational/unglq.hpp>
using namespace boost::numeric::bindings;

lapack::unglq( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/sorglq.f sorglq.f], [@http://www.netlib.org/lapack/double/dorglq.f dorglq.f], [@http://www.netlib.org/lapack/complex/cunglq.f cunglq.f], and [@http://www.netlib.org/lapack/complex16/zunglq.f zunglq.f] at Netlib.

[endsect]
