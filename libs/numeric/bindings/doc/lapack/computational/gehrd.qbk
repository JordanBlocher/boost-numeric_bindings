[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section gehrd]

[heading Prototype]
There is one prototype of `gehrd` available, please see below.
``
gehrd( const int_t ilo, const int_t ihi,
        MatrixA& a, VectorTAU& tau );
``


[heading Description]

`gehrd` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SGEHRD, DGEHRD, CGEHRD, and ZGEHRD. 
`gehrd` reduces a complex general matrix A to upper Hessenberg form H by
an unitary similarity transformation: Q' * A * Q = H .

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `MatrixA`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<MatrixA>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of gehrd
[  [ Value type of MatrixA ] [LAPACK routine] ]
[  [`float`][SGEHRD] ]
[  [`double`][DGEHRD] ]
[  [`complex<float>`][CGEHRD] ]
[  [`complex<double>`][ZGEHRD] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/computational/gehrd.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/computational/gehrd.hpp>
using namespace boost::numeric::bindings;

lapack::gehrd( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/sgehrd.f sgehrd.f], [@http://www.netlib.org/lapack/double/dgehrd.f dgehrd.f], [@http://www.netlib.org/lapack/complex/cgehrd.f cgehrd.f], and [@http://www.netlib.org/lapack/complex16/zgehrd.f zgehrd.f] at Netlib.

[endsect]
