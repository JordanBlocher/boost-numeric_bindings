[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section potrs]

[heading Prototype]
There is one prototype of `potrs` available, please see below.
``
potrs( const MatrixA& a, MatrixB& b );
``


[heading Description]

`potrs` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SPOTRS, DPOTRS, CPOTRS, and ZPOTRS. 
`potrs` solves a system of linear equations A*X = B with a Hermitian
positive definite matrix A using the Cholesky factorization
A = U**H*U or A = L*L**H computed by ZPOTRF.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `MatrixA`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<MatrixA>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of potrs
[  [ Value type of MatrixA ] [LAPACK routine] ]
[  [`float`][SPOTRS] ]
[  [`double`][DPOTRS] ]
[  [`complex<float>`][CPOTRS] ]
[  [`complex<double>`][ZPOTRS] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/computational/potrs.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/computational/potrs.hpp>
using namespace boost::numeric::bindings;

lapack::potrs( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/spotrs.f spotrs.f], [@http://www.netlib.org/lapack/double/dpotrs.f dpotrs.f], [@http://www.netlib.org/lapack/complex/cpotrs.f cpotrs.f], and [@http://www.netlib.org/lapack/complex16/zpotrs.f zpotrs.f] at Netlib.

[endsect]
