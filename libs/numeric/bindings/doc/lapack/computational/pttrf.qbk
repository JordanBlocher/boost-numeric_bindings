[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section pttrf]

[heading Prototype]
There is one prototype of `pttrf` available, please see below.
``
pttrf( VectorD& d, VectorE& e );
``


[heading Description]

`pttrf` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SPTTRF, DPTTRF, CPTTRF, and ZPTTRF. 
`pttrf` computes the L*D*L' factorization of a complex Hermitian
positive definite tridiagonal matrix A. The factorization may also
be regarded as having the form A = U'*D*U.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `VectorD`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<VectorD>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of pttrf
[  [ Value type of VectorD ] [LAPACK routine] ]
[  [`float`][SPTTRF] ]
[  [`double`][DPTTRF] ]
[  [`complex<float>`][CPTTRF] ]
[  [`complex<double>`][ZPTTRF] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/computational/pttrf.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/computational/pttrf.hpp>
using namespace boost::numeric::bindings;

lapack::pttrf( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/spttrf.f spttrf.f], [@http://www.netlib.org/lapack/double/dpttrf.f dpttrf.f], [@http://www.netlib.org/lapack/complex/cpttrf.f cpttrf.f], and [@http://www.netlib.org/lapack/complex16/zpttrf.f zpttrf.f] at Netlib.

[endsect]
