[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section gbequ]

[heading Prototype]
There is one prototype of `gbequ` available, please see below.
``
gbequ( const MatrixAB& ab, VectorR& r, VectorC& c, Scalar >, Scalar >,
        Scalar > );
``


[heading Description]

`gbequ` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SGBEQU, DGBEQU, CGBEQU, and ZGBEQU. 
`gbequ` computes row and column scalings intended to equilibrate an
M-by-N band matrix A and reduce its condition number. R returns the
row scale factors and C the column scale factors, chosen to try to
make the largest element in each row and column of the matrix B with
elements B(i,j)=R(i)*A(i,j)*C(j) have absolute value 1.

R(i) and C(j) are restricted to be between SMLNUM = smallest safe
number and BIGNUM = largest safe number. Use of these scaling
factors is not guaranteed to reduce the condition number of A but
works well in practice.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `MatrixAB`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<MatrixAB>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of gbequ
[  [ Value type of MatrixAB ] [LAPACK routine] ]
[  [`float`][SGBEQU] ]
[  [`double`][DGBEQU] ]
[  [`complex<float>`][CGBEQU] ]
[  [`complex<double>`][ZGBEQU] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/computational/gbequ.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/computational/gbequ.hpp>
using namespace boost::numeric::bindings;

lapack::gbequ( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/sgbequ.f sgbequ.f], [@http://www.netlib.org/lapack/double/dgbequ.f dgbequ.f], [@http://www.netlib.org/lapack/complex/cgbequ.f cgbequ.f], and [@http://www.netlib.org/lapack/complex16/zgbequ.f zgbequ.f] at Netlib.

[endsect]
