[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section sytrs]

[heading Prototype]
There is one prototype of `sytrs` available, please see below.
``
sytrs( const MatrixA& a, const VectorIPIV& ipiv, MatrixB& b );
``


[heading Description]

`sytrs` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SSYTRS, DSYTRS, CSYTRS, and ZSYTRS. 
`sytrs` solves a system of linear equations A*X = B with a complex
symmetric matrix A using the factorization A = U*D*U**T or
A = L*D*L**T computed by ZSYTRF.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `MatrixA`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<MatrixA>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of sytrs
[  [ Value type of MatrixA ] [LAPACK routine] ]
[  [`float`][SSYTRS] ]
[  [`double`][DSYTRS] ]
[  [`complex<float>`][CSYTRS] ]
[  [`complex<double>`][ZSYTRS] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/computational/sytrs.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/computational/sytrs.hpp>
using namespace boost::numeric::bindings;

lapack::sytrs( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/ssytrs.f ssytrs.f], [@http://www.netlib.org/lapack/double/dsytrs.f dsytrs.f], [@http://www.netlib.org/lapack/complex/csytrs.f csytrs.f], and [@http://www.netlib.org/lapack/complex16/zsytrs.f zsytrs.f] at Netlib.

[endsect]
