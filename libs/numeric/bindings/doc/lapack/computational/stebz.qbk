[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section stebz]

[heading Prototype]
There is one prototype of `stebz` available, please see below.
``
stebz( const char range, const char order, const int_t n,
        const Scalar >, const Scalar >, const int_t il,
        const int_t iu, const Scalar >, const VectorD& d,
        const VectorE& e, int_t& m, int_t& nsplit,
        VectorW& w, VectorIBLOCK& iblock, VectorISPLIT& isplit );
``


[heading Description]

`stebz` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SSTEBZ and DSTEBZ. 
`stebz` computes the eigenvalues of a symmetric tridiagonal
matrix T. The user may ask for all eigenvalues, all eigenvalues
in the half-open interval (VL, VU], or the IL-th through IU-th
eigenvalues.

To avoid overflow, the matrix must be scaled so that its
largest element is no greater than overflow**(1/2) *
underflow**(1/4) in absolute value, and for greatest
accuracy, it should not be much smaller than that.

See W. Kahan "Accurate Eigenvalues of a Symmetric Tridiagonal
Matrix", Report CS41, Computer Science Dept., Stanford
University, July 21, 1966.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `VectorD`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<VectorD>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of stebz
[  [ Value type of VectorD ] [LAPACK routine] ]
[  [`float`][SSTEBZ] ]
[  [`double`][DSTEBZ] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/computational/stebz.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/computational/stebz.hpp>
using namespace boost::numeric::bindings;

lapack::stebz( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/sstebz.f sstebz.f] and [@http://www.netlib.org/lapack/double/dstebz.f dstebz.f] at Netlib.

[endsect]
