[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section sptrs]

[heading Prototype]
There is one prototype of `sptrs` available, please see below.
``
sptrs( const MatrixAP& ap, const VectorIPIV& ipiv, MatrixB& b );
``


[heading Description]

`sptrs` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SSPTRS, DSPTRS, CSPTRS, and ZSPTRS. 
`sptrs` solves a system of linear equations A*X = B with a complex
symmetric matrix A stored in packed format using the factorization
A = U*D*U**T or A = L*D*L**T computed by ZSPTRF.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `MatrixAP`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<MatrixAP>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of sptrs
[  [ Value type of MatrixAP ] [LAPACK routine] ]
[  [`float`][SSPTRS] ]
[  [`double`][DSPTRS] ]
[  [`complex<float>`][CSPTRS] ]
[  [`complex<double>`][ZSPTRS] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/computational/sptrs.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/computational/sptrs.hpp>
using namespace boost::numeric::bindings;

lapack::sptrs( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/ssptrs.f ssptrs.f], [@http://www.netlib.org/lapack/double/dsptrs.f dsptrs.f], [@http://www.netlib.org/lapack/complex/csptrs.f csptrs.f], and [@http://www.netlib.org/lapack/complex16/zsptrs.f zsptrs.f] at Netlib.

[endsect]
