[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section lacon]

[heading Prototype]
There is one prototype of `lacon` available, please see below.
``
lacon( const int_t n, VectorX& x, Scalar >,
        int_t& kase );
``


[heading Description]

`lacon` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SLACON, DLACON, CLACON, and ZLACON. 
`lacon` estimates the 1-norm of a square, complex matrix A.
Reverse communication is used for evaluating matrix-vector products.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `VectorX`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<VectorX>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of lacon
[  [ Value type of VectorX ] [LAPACK routine] ]
[  [`float`][SLACON] ]
[  [`double`][DLACON] ]
[  [`complex<float>`][CLACON] ]
[  [`complex<double>`][ZLACON] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/auxiliary/lacon.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/auxiliary/lacon.hpp>
using namespace boost::numeric::bindings;

lapack::lacon( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/slacon.f slacon.f], [@http://www.netlib.org/lapack/double/dlacon.f dlacon.f], [@http://www.netlib.org/lapack/complex/clacon.f clacon.f], and [@http://www.netlib.org/lapack/complex16/zlacon.f zlacon.f] at Netlib.

[endsect]
