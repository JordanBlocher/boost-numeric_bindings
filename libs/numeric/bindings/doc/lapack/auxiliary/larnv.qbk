[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section larnv]

[heading Prototype]
There is one prototype of `larnv` available, please see below.
``
larnv( const int_t idist, VectorISEED& iseed,
        const int_t n, VectorX& x );
``


[heading Description]

`larnv` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SLARNV, DLARNV, CLARNV, and ZLARNV. 
`larnv` returns a vector of n random complex numbers from a uniform or
normal distribution.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `VectorISEED`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<VectorISEED>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of larnv
[  [ Value type of VectorISEED ] [LAPACK routine] ]
[  [`float`][SLARNV] ]
[  [`double`][DLARNV] ]
[  [`complex<float>`][CLARNV] ]
[  [`complex<double>`][ZLARNV] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/auxiliary/larnv.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/auxiliary/larnv.hpp>
using namespace boost::numeric::bindings;

lapack::larnv( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/slarnv.f slarnv.f], [@http://www.netlib.org/lapack/double/dlarnv.f dlarnv.f], [@http://www.netlib.org/lapack/complex/clarnv.f clarnv.f], and [@http://www.netlib.org/lapack/complex16/zlarnv.f zlarnv.f] at Netlib.

[endsect]
