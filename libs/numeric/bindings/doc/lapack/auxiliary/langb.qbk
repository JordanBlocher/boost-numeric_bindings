[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section langb]

[heading Prototype]
There is one prototype of `langb` available, please see below.
``
langb( const char norm, const MatrixAB& ab );
``


[heading Description]

`langb` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SLANGB, DLANGB, CLANGB, and ZLANGB. 
`langb` returns the value of the one norm, or the Frobenius norm, or
the infinity norm, or the element of largest absolute value of an
n by n band matrix A, with kl sub-diagonals and ku super-diagonals.

Description
===========

`langb` returns the value

`langb` = ( max(abs(A(i,j))), NORM = 'M' or 'm'
(
( norm1(A),  NORM = '1', 'O' or 'o'
(
( normI(A),  NORM = 'I' or 'i'
(
( normF(A),  NORM = 'F', 'f', 'E' or 'e'

where norm1 denotes the one norm of a matrix (maximum column sum),
normI denotes the infinity norm of a matrix (maximum row sum) and
normF denotes the Frobenius norm of a matrix (square root of sum of
squares). Note that max(abs(A(i,j))) is not a consistent matrix norm.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `MatrixAB`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<MatrixAB>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of langb
[  [ Value type of MatrixAB ] [LAPACK routine] ]
[  [`float`][SLANGB] ]
[  [`double`][DLANGB] ]
[  [`complex<float>`][CLANGB] ]
[  [`complex<double>`][ZLANGB] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/auxiliary/langb.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/auxiliary/langb.hpp>
using namespace boost::numeric::bindings;

lapack::langb( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/slangb.f slangb.f], [@http://www.netlib.org/lapack/double/dlangb.f dlangb.f], [@http://www.netlib.org/lapack/complex/clangb.f clangb.f], and [@http://www.netlib.org/lapack/complex16/zlangb.f zlangb.f] at Netlib.

[endsect]
