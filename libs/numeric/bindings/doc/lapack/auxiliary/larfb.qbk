[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section larfb]

[heading Prototype]
There is one prototype of `larfb` available, please see below.
``
larfb( const Side side, const char direct, const char storev,
        const MatrixV& v, const MatrixT& t, MatrixC& c,
        const int_t ldwork );
``


[heading Description]

`larfb` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SLARFB, DLARFB, CLARFB, and ZLARFB. 
`larfb` applies a complex block reflector H or its transpose H' to a
complex M-by-N matrix C, from either the left or the right.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `MatrixV`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<MatrixV>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of larfb
[  [ Value type of MatrixV ] [LAPACK routine] ]
[  [`float`][SLARFB] ]
[  [`double`][DLARFB] ]
[  [`complex<float>`][CLARFB] ]
[  [`complex<double>`][ZLARFB] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/auxiliary/larfb.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/auxiliary/larfb.hpp>
using namespace boost::numeric::bindings;

lapack::larfb( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/slarfb.f slarfb.f], [@http://www.netlib.org/lapack/double/dlarfb.f dlarfb.f], [@http://www.netlib.org/lapack/complex/clarfb.f clarfb.f], and [@http://www.netlib.org/lapack/complex16/zlarfb.f zlarfb.f] at Netlib.

[endsect]
