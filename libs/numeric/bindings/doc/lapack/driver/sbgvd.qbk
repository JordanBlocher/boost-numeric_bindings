[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section sbgvd]

[heading Prototype]
There is one prototype of `sbgvd` available, please see below.
``
sbgvd( const char jobz, MatrixAB& ab, MatrixBB& bb, VectorW& w,
        MatrixZ& z );
``


[heading Description]

`sbgvd` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SSBGVD and DSBGVD. 
`sbgvd` computes all the eigenvalues, and optionally, the eigenvectors
of a real generalized symmetric-definite banded eigenproblem, of the
form A*x=(lambda)*B*x. Here A and B are assumed to be symmetric and
banded, and B is also positive definite. If eigenvectors are
desired, it uses a divide and conquer algorithm.

The divide and conquer algorithm makes very mild assumptions about
floating point arithmetic. It will work on machines with a guard
digit in add/subtract, or on those binary machines without guard
digits which subtract like the Cray X-MP, Cray Y-MP, Cray C-90, or
Cray-2. It could conceivably fail on hexadecimal or decimal machines
without guard digits, but we know of none.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `MatrixAB`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<MatrixAB>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of sbgvd
[  [ Value type of MatrixAB ] [LAPACK routine] ]
[  [`float`][SSBGVD] ]
[  [`double`][DSBGVD] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/driver/sbgvd.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/driver/sbgvd.hpp>
using namespace boost::numeric::bindings;

lapack::sbgvd( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/ssbgvd.f ssbgvd.f] and [@http://www.netlib.org/lapack/double/dsbgvd.f dsbgvd.f] at Netlib.

[endsect]
