
[section gtsv]

[heading Prototype]
There is one prototype of `gtsv` available, please see below.
``
gtsv( const int_t n, VectorDL& dl, VectorD& d, VectorDU& du,
        MatrixB& b );
``


[heading Description]

`gtsv` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SGTSV, DGTSV, CGTSV, and ZGTSV. 
`gtsv` solves the equation

A*X = B,

where A is an N-by-N tridiagonal matrix, by Gaussian elimination with
partial pivoting.

Note that the equation A'*X = B may be solved by interchanging the
order of the arguments DU and DL.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `VectorDL`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<VectorDL>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of gtsv
[  [ Value type of VectorDL ] [LAPACK routine] ]
[  [`float`][SGTSV] ]
[  [`double`][DGTSV] ]
[  [`complex<float>`][CGTSV] ]
[  [`complex<double>`][ZGTSV] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/gtsv.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/gtsv.hpp>
using namespace boost::numeric::bindings;

lapack::gtsv( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/explore-html/sgtsv.f.html sgtsv.f], [@http://www.netlib.org/lapack/explore-html/dgtsv.f.html dgtsv.f], [@http://www.netlib.org/lapack/explore-html/cgtsv.f.html cgtsv.f], and [@http://www.netlib.org/lapack/explore-html/zgtsv.f.html zgtsv.f] at Netlib.

[endsect]
