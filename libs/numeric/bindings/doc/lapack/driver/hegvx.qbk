[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section hegvx]

[heading Prototype]
There is one prototype of `hegvx` available, please see below.
``
hegvx( const int_t itype, const char jobz, const char range,
        MatrixA& a, MatrixB& b, const Scalar >, const Scalar >,
        const int_t il, const int_t iu,
        const Scalar >, int_t& m, VectorW& w, MatrixZ& z,
        VectorIFAIL& ifail );
``


[heading Description]

`hegvx` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SSYGVX, DSYGVX, CHEGVX, and ZHEGVX. 
`hegvx` computes selected eigenvalues, and optionally, eigenvectors
of a complex generalized Hermitian-definite eigenproblem, of the form
A*x=(lambda)*B*x, A*Bx=(lambda)*x, or B*A*x=(lambda)*x. Here A and
B are assumed to be Hermitian and B is also positive definite.
Eigenvalues and eigenvectors can be selected by specifying either a
range of values or a range of indices for the desired eigenvalues.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `MatrixA`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<MatrixA>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of hegvx
[  [ Value type of MatrixA ] [LAPACK routine] ]
[  [`float`][SSYGVX] ]
[  [`double`][DSYGVX] ]
[  [`complex<float>`][CHEGVX] ]
[  [`complex<double>`][ZHEGVX] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/driver/hegvx.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/driver/hegvx.hpp>
using namespace boost::numeric::bindings;

lapack::hegvx( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/ssygvx.f ssygvx.f], [@http://www.netlib.org/lapack/double/dsygvx.f dsygvx.f], [@http://www.netlib.org/lapack/complex/chegvx.f chegvx.f], and [@http://www.netlib.org/lapack/complex16/zhegvx.f zhegvx.f] at Netlib.

[endsect]
