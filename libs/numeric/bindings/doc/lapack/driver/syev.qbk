[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section syev]

[heading Prototype]
There is one prototype of `syev` available, please see below.
``
syev( const char jobz, MatrixA& a, VectorW& w );
``


[heading Description]

`syev` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SSYEV and DSYEV. 
`syev` computes all eigenvalues and, optionally, eigenvectors of a
real symmetric matrix A.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `MatrixA`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<MatrixA>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of syev
[  [ Value type of MatrixA ] [LAPACK routine] ]
[  [`float`][SSYEV] ]
[  [`double`][DSYEV] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/driver/syev.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/driver/syev.hpp>
using namespace boost::numeric::bindings;

lapack::syev( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/ssyev.f ssyev.f] and [@http://www.netlib.org/lapack/double/dsyev.f dsyev.f] at Netlib.

[endsect]
