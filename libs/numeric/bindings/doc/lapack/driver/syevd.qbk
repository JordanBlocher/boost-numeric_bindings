[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section syevd]

[heading Prototype]
There is one prototype of `syevd` available, please see below.
``
syevd( const char jobz, MatrixA& a, VectorW& w );
``


[heading Description]

`syevd` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SSYEVD and DSYEVD. 
`syevd` computes all eigenvalues and, optionally, eigenvectors of a
real symmetric matrix A. If eigenvectors are desired, it uses a
divide and conquer algorithm.

The divide and conquer algorithm makes very mild assumptions about
floating point arithmetic. It will work on machines with a guard
digit in add/subtract, or on those binary machines without guard
digits which subtract like the Cray X-MP, Cray Y-MP, Cray C-90, or
Cray-2. It could conceivably fail on hexadecimal or decimal machines
without guard digits, but we know of none.

Because of large use of BLAS of level 3, `syevd` needs N**2 more
workspace than DSYEVX.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `MatrixA`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<MatrixA>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of syevd
[  [ Value type of MatrixA ] [LAPACK routine] ]
[  [`float`][SSYEVD] ]
[  [`double`][DSYEVD] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/driver/syevd.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/driver/syevd.hpp>
using namespace boost::numeric::bindings;

lapack::syevd( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/ssyevd.f ssyevd.f] and [@http://www.netlib.org/lapack/double/dsyevd.f dsyevd.f] at Netlib.

[endsect]
