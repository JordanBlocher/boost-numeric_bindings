[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section gees]

[heading Prototype]
There are two prototypes of `gees` available, please see below.
``
gees( const char jobvs, const char sort, external_fp select, MatrixA& a,
        int_t& sdim, VectorWR& wr, VectorWI& wi, MatrixVS& vs );
``

``
gees( const char jobvs, const char sort, external_fp select, MatrixA& a,
        int_t& sdim, VectorW& w, MatrixVS& vs );
``


[heading Description]

`gees` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SGEES, DGEES, CGEES, and ZGEES. 
`gees` computes for an N-by-N complex nonsymmetric matrix A, the
eigenvalues, the Schur form T, and, optionally, the matrix of Schur
vectors Z. This gives the Schur factorization A = Z*T*(Z**H).

Optionally, it also orders the eigenvalues on the diagonal of the
Schur form so that selected eigenvalues are at the top left.
The leading columns of Z then form an orthonormal basis for the
invariant subspace corresponding to the selected eigenvalues.

A complex matrix is in Schur form if it is upper triangular.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `MatrixA`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<MatrixA>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of gees
[  [ Value type of MatrixA ] [LAPACK routine] ]
[  [`float`][SGEES] ]
[  [`double`][DGEES] ]
[  [`complex<float>`][CGEES] ]
[  [`complex<double>`][ZGEES] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/driver/gees.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/driver/gees.hpp>
using namespace boost::numeric::bindings;

lapack::gees( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/sgees.f sgees.f], [@http://www.netlib.org/lapack/double/dgees.f dgees.f], [@http://www.netlib.org/lapack/complex/cgees.f cgees.f], and [@http://www.netlib.org/lapack/complex16/zgees.f zgees.f] at Netlib.

[endsect]
