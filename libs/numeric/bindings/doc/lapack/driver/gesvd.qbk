[/ 

THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT!

]

[section gesvd]

[heading Prototype]
There is one prototype of `gesvd` available, please see below.
``
gesvd( const char jobu, const char jobvt, MatrixA& a, VectorS& s,
        MatrixU& u, MatrixVT& vt );
``


[heading Description]

`gesvd` (short for $FRIENDLY_NAME) provides a C++
interface to LAPACK routines SGESVD, DGESVD, CGESVD, and ZGESVD. 
`gesvd` computes the singular value decomposition (SVD) of a complex
M-by-N matrix A, optionally computing the left and/or right singular
vectors. The SVD is written

A = U * SIGMA * conjugate-transpose(V)

where SIGMA is an M-by-N matrix which is zero except for its
min(m,n) diagonal elements, U is an M-by-M unitary matrix, and
V is an N-by-N unitary matrix. The diagonal elements of SIGMA
are the singular values of A; they are real and non-negative, and
are returned in descending order. The first min(m,n) columns of
U and V are the left and right singular vectors of A.

Note that the routine returns V**H, not V.

The selection of the LAPACK routine is done during compile-time, 
and is determined by the type of values contained in type `MatrixA`.
The type of values is obtained through the `value_type` meta-function
 `typename value_type<MatrixA>::type`.
The dispatching table below illustrates to which specific routine 
the code path will be generated. 

[table Dispatching of gesvd
[  [ Value type of MatrixA ] [LAPACK routine] ]
[  [`float`][SGESVD] ]
[  [`double`][DGESVD] ]
[  [`complex<float>`][CGESVD] ]
[  [`complex<double>`][ZGESVD] ]

]


[heading Definition]
Defined in header [headerref boost/numeric/bindings/lapack/driver/gesvd.hpp].


[heading Parameters or Requirements on Types]

[variablelist Parameters
    [[MatrixA] [The definition of term 1]]
    [[MatrixB] [The definition of term 2]]
    [[MatrixC] [
    The definition of term 3.

    Definitions may contain paragraphs.
    ]]
]


[heading Complexity]


[heading Example]
``
#include <boost/numeric/bindings/lapack/driver/gesvd.hpp>
using namespace boost::numeric::bindings;

lapack::gesvd( x, y, z );

``

this will output

``
[5] 0 1 2 3 4 5
``



[heading Notes]


[heading See Also]

* Originating Fortran source files [@http://www.netlib.org/lapack/single/sgesvd.f sgesvd.f], [@http://www.netlib.org/lapack/double/dgesvd.f dgesvd.f], [@http://www.netlib.org/lapack/complex/cgesvd.f cgesvd.f], and [@http://www.netlib.org/lapack/complex16/zgesvd.f zgesvd.f] at Netlib.

[endsect]
